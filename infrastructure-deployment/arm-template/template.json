{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "vaults_sales_prod_kv_name": {
            "defaultValue": "sales-prod-kv",
            "type": "String"
        },
        "workspaces_sales_prod_synw_name": {
            "defaultValue": "sales-prod-synw",
            "type": "String"
        },
        "workspaces_sales_prod_dbw_name": {
            "defaultValue": "sales-prod-dbw",
            "type": "String"
        },
        "storageAccounts_salesdlprod1_name": {
            "defaultValue": "salesdlprod1",
            "type": "String"
        },
        "storageAccounts_salesproddlsynw_name": {
            "defaultValue": "salesproddlsynw",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Databricks/workspaces",
            "apiVersion": "2025-03-01-preview",
            "name": "[parameters('workspaces_sales_prod_dbw_name')]",
            "location": "southeastasia",
            "sku": {
                "name": "standard"
            },
            "properties": {
                "managedResourceGroupId": "/subscriptions/4af61e39-843d-4976-904f-dda85b15166d/resourceGroups/db-srv",
                "parameters": {
                    "enableNoPublicIp": {
                        "value": true
                    },
                    "natGatewayName": {
                        "value": "nat-gateway"
                    },
                    "prepareEncryption": {
                        "value": false
                    },
                    "publicIpName": {
                        "value": "nat-gw-public-ip"
                    },
                    "requireInfrastructureEncryption": {
                        "value": false
                    },
                    "storageAccountName": {
                        "value": "dbstoragezar66bawfz4ku"
                    },
                    "storageAccountSkuName": {
                        "value": "Standard_GRS"
                    },
                    "vnetAddressPrefix": {
                        "value": "10.139"
                    }
                },
                "authorizations": [
                    {
                        "principalId": "9a74af6f-d153-4348-988a-e2672920bee9",
                        "roleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                    }
                ],
                "createdBy": {},
                "updatedBy": {}
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2024-12-01-preview",
            "name": "[parameters('vaults_sales_prod_kv_name')]",
            "location": "southeastasia",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "5282c992-3c05-4a1a-9bf3-e662d817ff89",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": [],
                    "virtualNetworkRules": []
                },
                "accessPolicies": [
                    {
                        "tenantId": "5282c992-3c05-4a1a-9bf3-e662d817ff89",
                        "objectId": "ab2367ef-b156-4ffa-851e-8d31e89a3bab",
                        "permissions": {
                            "certificates": [],
                            "keys": [],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Purge"
                            ]
                        }
                    },
                    {
                        "tenantId": "5282c992-3c05-4a1a-9bf3-e662d817ff89",
                        "objectId": "74888616-dc06-4582-b1be-13ce30b0499e",
                        "permissions": {
                            "certificates": [],
                            "keys": [],
                            "secrets": [
                                "Get",
                                "List",
                                "Set"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "vaultUri": "[concat('https://', parameters('vaults_sales_prod_kv_name'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2025-01-01",
            "name": "[parameters('storageAccounts_salesdlprod1_name')]",
            "location": "southeastasia",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "isSftpEnabled": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "largeFileSharesState": "Enabled",
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2025-01-01",
            "name": "[parameters('storageAccounts_salesproddlsynw_name')]",
            "location": "southeastasia",
            "sku": {
                "name": "Standard_GRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-12-01-preview",
            "name": "[concat(parameters('vaults_sales_prod_kv_name'), '/dbwtoken')]",
            "location": "southeastasia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_sales_prod_kv_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-12-01-preview",
            "name": "[concat(parameters('vaults_sales_prod_kv_name'), '/dbw-token')]",
            "location": "southeastasia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_sales_prod_kv_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-12-01-preview",
            "name": "[concat(parameters('vaults_sales_prod_kv_name'), '/password')]",
            "location": "southeastasia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_sales_prod_kv_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-12-01-preview",
            "name": "[concat(parameters('vaults_sales_prod_kv_name'), '/username')]",
            "location": "southeastasia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_sales_prod_kv_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesdlprod1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesdlprod1_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesproddlsynw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesproddlsynw_name'))]"
            ],
            "sku": {
                "name": "Standard_GRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesdlprod1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesdlprod1_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesproddlsynw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesproddlsynw_name'))]"
            ],
            "sku": {
                "name": "Standard_GRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesdlprod1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesdlprod1_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesproddlsynw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesproddlsynw_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesdlprod1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesdlprod1_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesproddlsynw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesproddlsynw_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[parameters('workspaces_sales_prod_synw_name')]",
            "location": "southeastasia",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesproddlsynw_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesproddlsynw_name'))]",
                    "createManagedPrivateEndpoint": false,
                    "accountUrl": "https://salesproddlsynw.dfs.core.windows.net",
                    "filesystem": "synapse-workspace"
                },
                "encryption": {},
                "managedResourceGroupName": "synapseworkspace-managedrg-dbb94ea2-8fcd-41a3-8df2-9ad2765de8ea",
                "sqlAdministratorLogin": "sqladminuser",
                "privateEndpointConnections": [],
                "workspaceRepositoryConfiguration": {
                    "accountName": "zangphan96",
                    "collaborationBranch": "main",
                    "hostName": "https://github.com",
                    "lastCommitId": "870665fd748e47eca394b5aaffa3a6b0b3ab3e3a",
                    "repositoryName": "Azure-Data-Engineering",
                    "rootFolder": "/synapse-analytics",
                    "type": "WorkspaceGitHubConfiguration"
                },
                "publicNetworkAccess": "Enabled",
                "cspWorkspaceAdminProperties": {
                    "initialWorkspaceAdminObjectId": "ab2367ef-b156-4ffa-851e-8d31e89a3bab"
                },
                "azureADOnlyAuthentication": true,
                "trustedServiceBypassEnabled": false
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/auditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_sales_prod_synw_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_sales_prod_synw_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/azureADOnlyAuthentications",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_sales_prod_synw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_sales_prod_synw_name'))]"
            ],
            "properties": {
                "azureADOnlyAuthentication": true
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/dedicatedSQLminimalTlsSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_sales_prod_synw_name'), '/default')]",
            "location": "southeastasia",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_sales_prod_synw_name'))]"
            ],
            "properties": {
                "minimalTlsVersion": "1.2"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/extendedAuditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_sales_prod_synw_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_sales_prod_synw_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/firewallRules",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_sales_prod_synw_name'), '/allowAll')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_sales_prod_synw_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/integrationruntimes",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_sales_prod_synw_name'), '/AutoResolveIntegrationRuntime')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_sales_prod_synw_name'))]"
            ],
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/securityAlertPolicies",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_sales_prod_synw_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_sales_prod_synw_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/vulnerabilityAssessments",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_sales_prod_synw_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_sales_prod_synw_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesdlprod1_name'), '/default/bronze')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_salesdlprod1_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesdlprod1_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesdlprod1_name'), '/default/gold')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_salesdlprod1_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesdlprod1_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesdlprod1_name'), '/default/silver')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_salesdlprod1_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesdlprod1_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_salesproddlsynw_name'), '/default/synapse-workspace')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_salesproddlsynw_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_salesproddlsynw_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        }
    ]
}